{"ast":null,"code":"import React,{useEffect,useState,useRef}from'react';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PdfList=()=>{const[pdfs,setPdfs]=useState([]);const fileInputRef=useRef(null);useEffect(()=>{fetchPdfs();},[]);const fetchPdfs=()=>{axios.get('http://localhost:8080/api/pdfs').then(response=>{console.log('PDF data from backend:',response.data);setPdfs(response.data);}).catch(error=>{console.error('Error fetching PDFs:',error);});};const openFileDialog=()=>{fileInputRef.current.click();};const handleFileChange=e=>{const file=e.target.files[0];if(!file)return;console.log(\"File selected:\",file);const formData=new FormData();formData.append(\"file\",file);axios.post('http://localhost:8080/api/pdfs/upload',formData).then(response=>{console.log(\"File uploaded successfully:\",response.data);// Re-fetch the PDFs\nfetchPdfs();}).catch(error=>{console.error(\"Error uploading file:\",error);});};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Uploaded PDFs\"}),/*#__PURE__*/_jsx(\"button\",{onClick:openFileDialog,children:\"Add New File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:fileInputRef,style:{display:'none'},onChange:handleFileChange}),/*#__PURE__*/_jsx(\"ul\",{children:pdfs.length===0?/*#__PURE__*/_jsx(\"li\",{children:\"No PDFs uploaded yet.\"}):pdfs.map(pdf=>/*#__PURE__*/_jsx(\"li\",{children:pdf.filename},pdf.id))})]});};export default PdfList;","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsx","_jsx","jsxs","_jsxs","PdfList","pdfs","setPdfs","fileInputRef","fetchPdfs","get","then","response","console","log","data","catch","error","openFileDialog","current","click","handleFileChange","e","file","target","files","formData","FormData","append","post","children","onClick","type","ref","style","display","onChange","length","map","pdf","filename","id"],"sources":["/Users/nehathawani/Downloads/management/frontend/src/components/PdfList.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst PdfList = () => {\n  const [pdfs, setPdfs] = useState([]);\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    fetchPdfs();\n  }, []);\n\n  const fetchPdfs = () => {\n    axios.get('http://localhost:8080/api/pdfs')\n      .then(response => {\n        console.log('PDF data from backend:', response.data);\n        setPdfs(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching PDFs:', error);\n      });\n  };\n\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    console.log(\"File selected:\", file);\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    axios.post('http://localhost:8080/api/pdfs/upload', formData)\n      .then(response => {\n        console.log(\"File uploaded successfully:\", response.data);\n        // Re-fetch the PDFs\n        fetchPdfs();\n      })\n      .catch(error => {\n        console.error(\"Error uploading file:\", error);\n      });\n  };\n\n  return (\n    <div>\n      <h1>Uploaded PDFs</h1>\n      <button onClick={openFileDialog}>Add New File</button>\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        onChange={handleFileChange}\n      />\n\n     <ul>\n       {pdfs.length === 0 ? (\n         <li>No PDFs uploaded yet.</li>\n       ) : (\n         pdfs.map((pdf) => (\n           <li key={pdf.id}>\n             {pdf.filename}\n           </li>\n         ))\n       )}\n     </ul>\n    </div>\n  );\n};\n\nexport default PdfList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,CAAEC,MAAM,KAAQ,OAAO,CAC1D,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,KAAM,CAAAC,OAAO,CAAGA,CAAA,GAAM,CACpB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAAU,YAAY,CAAGT,MAAM,CAAC,IAAI,CAAC,CAEjCF,SAAS,CAAC,IAAM,CACdY,SAAS,CAAC,CAAC,CACb,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAA,SAAS,CAAGA,CAAA,GAAM,CACtBT,KAAK,CAACU,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAACC,QAAQ,EAAI,CAChBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAEF,QAAQ,CAACG,IAAI,CAAC,CACpDR,OAAO,CAACK,QAAQ,CAACG,IAAI,CAAC,CACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAI,CACdJ,OAAO,CAACI,KAAK,CAAC,sBAAsB,CAAEA,KAAK,CAAC,CAC9C,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGA,CAAA,GAAM,CAC3BV,YAAY,CAACW,OAAO,CAACC,KAAK,CAAC,CAAC,CAC9B,CAAC,CAED,KAAM,CAAAC,gBAAgB,CAAIC,CAAC,EAAK,CAC9B,KAAM,CAAAC,IAAI,CAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAC9B,GAAI,CAACF,IAAI,CAAE,OAEXV,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAES,IAAI,CAAC,CAEnC,KAAM,CAAAG,QAAQ,CAAG,GAAI,CAAAC,QAAQ,CAAC,CAAC,CAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,CAAEL,IAAI,CAAC,CAE7BvB,KAAK,CAAC6B,IAAI,CAAC,uCAAuC,CAAEH,QAAQ,CAAC,CAC1Df,IAAI,CAACC,QAAQ,EAAI,CAChBC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEF,QAAQ,CAACG,IAAI,CAAC,CACzD;AACAN,SAAS,CAAC,CAAC,CACb,CAAC,CAAC,CACDO,KAAK,CAACC,KAAK,EAAI,CACdJ,OAAO,CAACI,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CAAC,CAAC,CACN,CAAC,CAED,mBACEb,KAAA,QAAA0B,QAAA,eACE5B,IAAA,OAAA4B,QAAA,CAAI,eAAa,CAAI,CAAC,cACtB5B,IAAA,WAAQ6B,OAAO,CAAEb,cAAe,CAAAY,QAAA,CAAC,cAAY,CAAQ,CAAC,cACtD5B,IAAA,UACE8B,IAAI,CAAC,MAAM,CACXC,GAAG,CAAEzB,YAAa,CAClB0B,KAAK,CAAE,CAAEC,OAAO,CAAE,MAAO,CAAE,CAC3BC,QAAQ,CAAEf,gBAAiB,CAC5B,CAAC,cAEHnB,IAAA,OAAA4B,QAAA,CACGxB,IAAI,CAAC+B,MAAM,GAAK,CAAC,cAChBnC,IAAA,OAAA4B,QAAA,CAAI,uBAAqB,CAAI,CAAC,CAE9BxB,IAAI,CAACgC,GAAG,CAAEC,GAAG,eACXrC,IAAA,OAAA4B,QAAA,CACGS,GAAG,CAACC,QAAQ,EADND,GAAG,CAACE,EAET,CACL,CACF,CACC,CAAC,EACD,CAAC,CAEV,CAAC,CAED,cAAe,CAAApC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}