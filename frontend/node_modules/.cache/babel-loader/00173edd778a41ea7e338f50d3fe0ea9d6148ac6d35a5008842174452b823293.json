{"ast":null,"code":"var _jsxFileName = \"/Users/nehathawani/Downloads/management/frontend/src/components/PdfList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PdfList = () => {\n  _s();\n  const [pdfs, setPdfs] = useState([]);\n  const fileInputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/pdfs').then(response => {\n      setPdfs(response.data);\n    }).catch(error => {\n      console.error('Error fetching PDFs:', error);\n    });\n  }, []);\n\n  // Function to trigger the file dialog\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n\n  // Handle file selection\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    console.log(\"File selected:\", file);\n    // Optionally, upload the file here or handle it as needed.\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Uploaded PDFs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: openFileDialog,\n      children: \"Add New File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pdfs.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"No PDFs uploaded yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this) : pdfs.map(pdf => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: pdf.name\n      }, pdf.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(PdfList, \"qjX7kFB2wdl4R/eJx3VbqvjBEn8=\");\n_c = PdfList;\nexport default PdfList;\nvar _c;\n$RefreshReg$(_c, \"PdfList\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","jsxDEV","_jsxDEV","PdfList","_s","pdfs","setPdfs","fileInputRef","get","then","response","data","catch","error","console","openFileDialog","current","click","handleFileChange","e","file","target","files","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","ref","style","display","onChange","length","map","pdf","name","id","_c","$RefreshReg$"],"sources":["/Users/nehathawani/Downloads/management/frontend/src/components/PdfList.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst PdfList = () => {\n  const [pdfs, setPdfs] = useState([]);\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/pdfs')\n      .then(response => {\n        setPdfs(response.data);\n      })\n      .catch(error => {\n        console.error('Error fetching PDFs:', error);\n      });\n  }, []);\n\n  // Function to trigger the file dialog\n  const openFileDialog = () => {\n    fileInputRef.current.click();\n  };\n\n  // Handle file selection\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    console.log(\"File selected:\", file);\n    // Optionally, upload the file here or handle it as needed.\n  };\n\n  return (\n    <div>\n      <h1>Uploaded PDFs</h1>\n      <button onClick={openFileDialog}>Add New File</button>\n      {/* Hidden file input */}\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n        onChange={handleFileChange}\n      />\n      <ul>\n        {pdfs.length === 0 ? (\n          <li>No PDFs uploaded yet.</li>\n        ) : (\n          pdfs.map((pdf) => (\n            <li key={pdf.id}>\n              {pdf.name}\n            </li>\n          ))\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default PdfList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAMS,YAAY,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEjCF,SAAS,CAAC,MAAM;IACdG,KAAK,CAACQ,GAAG,CAAC,gCAAgC,CAAC,CACxCC,IAAI,CAACC,QAAQ,IAAI;MAChBJ,OAAO,CAACI,QAAQ,CAACC,IAAI,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,cAAc,GAAGA,CAAA,KAAM;IAC3BR,YAAY,CAACS,OAAO,CAACC,KAAK,CAAC,CAAC;EAC9B,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BR,OAAO,CAACS,GAAG,CAAC,gBAAgB,EAAEH,IAAI,CAAC;IACnC;EACF,CAAC;EAED,oBACElB,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtB1B,OAAA;MAAQ2B,OAAO,EAAEd,cAAe;MAAAS,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEtD1B,OAAA;MACE4B,IAAI,EAAC,MAAM;MACXC,GAAG,EAAExB,YAAa;MAClByB,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,QAAQ,EAAEhB;IAAiB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CAAC,eACF1B,OAAA;MAAAsB,QAAA,EACGnB,IAAI,CAAC8B,MAAM,KAAK,CAAC,gBAChBjC,OAAA;QAAAsB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,GAE9BvB,IAAI,CAAC+B,GAAG,CAAEC,GAAG,iBACXnC,OAAA;QAAAsB,QAAA,EACGa,GAAG,CAACC;MAAI,GADFD,GAAG,CAACE,EAAE;QAAAd,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACL;IACF;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACxB,EAAA,CAlDID,OAAO;AAAAqC,EAAA,GAAPrC,OAAO;AAoDb,eAAeA,OAAO;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}