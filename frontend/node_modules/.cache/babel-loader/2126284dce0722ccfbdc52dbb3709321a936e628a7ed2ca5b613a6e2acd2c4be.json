{"ast":null,"code":"var _jsxFileName = \"/Users/nehathawani/Downloads/management/frontend/src/components/PdfManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfManager() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [stampText, setStampText] = useState('');\n  const [pdfUrl, setPdfUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const canvasRef = useRef(null);\n\n  // Fetch PDF data from backend\n  useEffect(() => {\n    const fetchPdf = async () => {\n      try {\n        setIsLoading(true);\n\n        // Get PDF metadata\n        const metadataResponse = await axios.get(`http://localhost:8080/api/pdfs/${id}`);\n        setFileName(metadataResponse.data.fileName);\n\n        // Get the actual PDF file\n        const pdfResponse = await axios.get(`http://localhost:8080/api/pdfs/${id}/download`, {\n          responseType: 'arraybuffer'\n        });\n        const pdfBlob = new Blob([pdfResponse.data], {\n          type: 'application/pdf'\n        });\n        setPdfFile(pdfResponse.data);\n        setPdfUrl(URL.createObjectURL(pdfBlob));\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching PDF:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchPdf();\n  }, [id]);\n\n  // Apply stamp to PDF directly in the browser\n  const applyStamp = async () => {\n    try {\n      if (!pdfFile || !stampText) return;\n\n      // Load the PDF\n      const pdfDoc = await PDFDocument.load(pdfFile);\n      const pages = pdfDoc.getPages();\n      const lastPage = pages[pages.length - 1];\n\n      // Get dimensions\n      const {\n        width,\n        height\n      } = lastPage.getSize();\n\n      // Embed font\n      const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n\n      // Add stamp text at the bottom of the page\n      lastPage.drawText(stampText, {\n        x: 50,\n        y: 50,\n        // Position at bottom of page\n        size: 12,\n        font: helveticaFont,\n        color: rgb(0.95, 0.1, 0.1) // Red color for stamp\n      });\n\n      // Save the modified PDF\n      const modifiedPdfBytes = await pdfDoc.save();\n\n      // Create a new blob with the modified PDF\n      const modifiedPdfBlob = new Blob([modifiedPdfBytes], {\n        type: 'application/pdf'\n      });\n\n      // Update the PDF URL to show the stamped version\n      URL.revokeObjectURL(pdfUrl); // Clean up old URL\n      setPdfUrl(URL.createObjectURL(modifiedPdfBlob));\n      setPdfFile(modifiedPdfBytes);\n\n      // Optional: If you want to also save to backend\n      // saveStampedPdfToBackend(modifiedPdfBytes);\n    } catch (error) {\n      console.error('Error applying stamp:', error);\n    }\n  };\n\n  // Optional: Save stamped PDF to backend\n  const saveStampedPdfToBackend = async pdfBytes => {\n    try {\n      const formData = new FormData();\n      const blob = new Blob([pdfBytes], {\n        type: 'application/pdf'\n      });\n      formData.append('file', blob, fileName);\n      await axios.post(`http://localhost:8080/api/pdfs/${id}/update`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('Stamped PDF saved to backend');\n    } catch (error) {\n      console.error('Error saving stamped PDF to backend:', error);\n    }\n  };\n\n  // Download the current PDF (original or stamped)\n  const downloadPdf = () => {\n    if (!pdfUrl) return;\n    const link = document.createElement('a');\n    link.href = pdfUrl;\n    link.download = fileName || `stamped-pdf-${id}.pdf`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: fileName || `PDF ${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '5px'\n          },\n          children: \"Stempeltext:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: stampText,\n          onChange: e => setStampText(e.target.value),\n          placeholder: \"Enter stamp text\",\n          style: {\n            width: '100%',\n            padding: '8px',\n            fontSize: '16px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: applyStamp,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#4CAF50',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Aktualisieren\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: downloadPdf,\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#2196F3',\n            color: 'white',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Herunterladen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate('/'),\n          style: {\n            padding: '8px 16px',\n            backgroundColor: '#f1f1f1',\n            border: 'none',\n            borderRadius: '4px',\n            cursor: 'pointer'\n          },\n          children: \"Zur Liste\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading PDF...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ddd',\n        borderRadius: '4px',\n        height: '600px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n        src: pdfUrl,\n        title: \"PDF Viewer\",\n        style: {\n          width: '100%',\n          height: '100%',\n          border: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfManager, \"8z6G6/wKkT9S98uty7nv0eNbJuE=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = PdfManager;\nexport default PdfManager;\nvar _c;\n$RefreshReg$(_c, \"PdfManager\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","useNavigate","axios","PDFDocument","rgb","StandardFonts","jsxDEV","_jsxDEV","PdfManager","_s","id","navigate","pdfFile","setPdfFile","fileName","setFileName","stampText","setStampText","pdfUrl","setPdfUrl","isLoading","setIsLoading","canvasRef","fetchPdf","metadataResponse","get","data","pdfResponse","responseType","pdfBlob","Blob","type","URL","createObjectURL","error","console","applyStamp","pdfDoc","load","pages","getPages","lastPage","length","width","height","getSize","helveticaFont","embedFont","Helvetica","drawText","x","y","size","font","color","modifiedPdfBytes","save","modifiedPdfBlob","revokeObjectURL","saveStampedPdfToBackend","pdfBytes","formData","FormData","blob","append","post","headers","log","downloadPdf","link","document","createElement","href","download","body","appendChild","click","removeChild","style","padding","maxWidth","margin","children","_jsxFileName","lineNumber","columnNumber","marginBottom","display","value","onChange","e","target","placeholder","fontSize","gap","onClick","backgroundColor","border","borderRadius","cursor","src","title","_c","$RefreshReg$"],"sources":["/Users/nehathawani/Downloads/management/frontend/src/components/PdfManager.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { PDFDocument, rgb, StandardFonts } from 'pdf-lib';\n\nfunction PdfManager() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [pdfFile, setPdfFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [stampText, setStampText] = useState('');\n  const [pdfUrl, setPdfUrl] = useState('');\n  const [isLoading, setIsLoading] = useState(true);\n  const canvasRef = useRef(null);\n  \n  // Fetch PDF data from backend\n  useEffect(() => {\n    const fetchPdf = async () => {\n      try {\n        setIsLoading(true);\n        \n        // Get PDF metadata\n        const metadataResponse = await axios.get(`http://localhost:8080/api/pdfs/${id}`);\n        setFileName(metadataResponse.data.fileName);\n        \n        // Get the actual PDF file\n        const pdfResponse = await axios.get(`http://localhost:8080/api/pdfs/${id}/download`, {\n          responseType: 'arraybuffer'\n        });\n        \n        const pdfBlob = new Blob([pdfResponse.data], { type: 'application/pdf' });\n        setPdfFile(pdfResponse.data);\n        setPdfUrl(URL.createObjectURL(pdfBlob));\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching PDF:', error);\n        setIsLoading(false);\n      }\n    };\n    \n    fetchPdf();\n  }, [id]);\n\n  // Apply stamp to PDF directly in the browser\n  const applyStamp = async () => {\n    try {\n      if (!pdfFile || !stampText) return;\n      \n      // Load the PDF\n      const pdfDoc = await PDFDocument.load(pdfFile);\n      const pages = pdfDoc.getPages();\n      const lastPage = pages[pages.length - 1];\n      \n      // Get dimensions\n      const { width, height } = lastPage.getSize();\n      \n      // Embed font\n      const helveticaFont = await pdfDoc.embedFont(StandardFonts.Helvetica);\n      \n      // Add stamp text at the bottom of the page\n      lastPage.drawText(stampText, {\n        x: 50,\n        y: 50, // Position at bottom of page\n        size: 12,\n        font: helveticaFont,\n        color: rgb(0.95, 0.1, 0.1), // Red color for stamp\n      });\n      \n      // Save the modified PDF\n      const modifiedPdfBytes = await pdfDoc.save();\n      \n      // Create a new blob with the modified PDF\n      const modifiedPdfBlob = new Blob([modifiedPdfBytes], { type: 'application/pdf' });\n      \n      // Update the PDF URL to show the stamped version\n      URL.revokeObjectURL(pdfUrl); // Clean up old URL\n      setPdfUrl(URL.createObjectURL(modifiedPdfBlob));\n      setPdfFile(modifiedPdfBytes);\n      \n      // Optional: If you want to also save to backend\n      // saveStampedPdfToBackend(modifiedPdfBytes);\n      \n    } catch (error) {\n      console.error('Error applying stamp:', error);\n    }\n  };\n  \n  // Optional: Save stamped PDF to backend\n  const saveStampedPdfToBackend = async (pdfBytes) => {\n    try {\n      const formData = new FormData();\n      const blob = new Blob([pdfBytes], { type: 'application/pdf' });\n      formData.append('file', blob, fileName);\n      \n      await axios.post(`http://localhost:8080/api/pdfs/${id}/update`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      console.log('Stamped PDF saved to backend');\n    } catch (error) {\n      console.error('Error saving stamped PDF to backend:', error);\n    }\n  };\n  \n  // Download the current PDF (original or stamped)\n  const downloadPdf = () => {\n    if (!pdfUrl) return;\n    \n    const link = document.createElement('a');\n    link.href = pdfUrl;\n    link.download = fileName || `stamped-pdf-${id}.pdf`;\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  return (\n    <div style={{ padding: '20px', maxWidth: '1200px', margin: '0 auto' }}>\n      <h1>{fileName || `PDF ${id}`}</h1>\n      \n      <div style={{ marginBottom: '20px' }}>\n        <div style={{ marginBottom: '10px' }}>\n          <label style={{ display: 'block', marginBottom: '5px' }}>Stempeltext:</label>\n          <input\n            type=\"text\"\n            value={stampText}\n            onChange={(e) => setStampText(e.target.value)}\n            placeholder=\"Enter stamp text\"\n            style={{ width: '100%', padding: '8px', fontSize: '16px' }}\n          />\n        </div>\n        \n        <div style={{ display: 'flex', gap: '10px' }}>\n          <button \n            onClick={applyStamp}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: '#4CAF50',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            Aktualisieren\n          </button>\n          \n          <button \n            onClick={downloadPdf}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: '#2196F3',\n              color: 'white',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            Herunterladen\n          </button>\n          \n          <button \n            onClick={() => navigate('/')}\n            style={{\n              padding: '8px 16px',\n              backgroundColor: '#f1f1f1',\n              border: 'none',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            }}\n          >\n            Zur Liste\n          </button>\n        </div>\n      </div>\n      \n      {isLoading ? (\n        <div>Loading PDF...</div>\n      ) : (\n        <div style={{ border: '1px solid #ddd', borderRadius: '4px', height: '600px' }}>\n          <iframe\n            src={pdfUrl}\n            title=\"PDF Viewer\"\n            style={{ width: '100%', height: '100%', border: 'none' }}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default PdfManager;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}