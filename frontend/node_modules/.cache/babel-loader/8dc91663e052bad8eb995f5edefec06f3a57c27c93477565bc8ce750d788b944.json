{"ast":null,"code":"var _jsxFileName = \"/Users/nehathawani/Downloads/management/frontend/src/components/PdfUploader.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PdfStamp({\n  pdfId\n}) {\n  _s();\n  const [date, setDate] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n  const handleStamp = () => {\n    const stampData = {\n      date,\n      name,\n      comment\n    };\n    axios.post(`http://localhost:8080/api/pdfs/${pdfId}/stamp`, stampData).then(response => {\n      alert(\"PDF stamped successfully!\");\n    }).catch(error => {\n      alert(\"Failed to stamp PDF!\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Date\",\n      value: date,\n      onChange: e => setDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Comment\",\n      value: comment,\n      onChange: e => setComment(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStamp,\n      children: \"Stamp PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(PdfStamp, \"gG8CBvRrW9W8PTWGt0/o5m6g8NI=\");\n_c = PdfStamp;\nexport default PdfStamp;\nvar _c;\n$RefreshReg$(_c, \"PdfStamp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PdfStamp","pdfId","_s","date","setDate","name","setName","comment","setComment","handleStamp","stampData","post","then","response","alert","catch","error","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/nehathawani/Downloads/management/frontend/src/components/PdfUploader.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction PdfStamp({ pdfId }) {\n  const [date, setDate] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const handleStamp = () => {\n    const stampData = { date, name, comment };\n\n    axios.post(`http://localhost:8080/api/pdfs/${pdfId}/stamp`, stampData)\n      .then(response => {\n        alert(\"PDF stamped successfully!\");\n      })\n      .catch(error => {\n        alert(\"Failed to stamp PDF!\");\n      });\n  };\n\n  return (\n    <div>\n      <input\n        type=\"text\"\n        placeholder=\"Date\"\n        value={date}\n        onChange={(e) => setDate(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        type=\"text\"\n        placeholder=\"Comment\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n      />\n      <button onClick={handleStamp}>Stamp PDF</button>\n    </div>\n  );\n}\n\nexport default PdfStamp;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB,MAAMC,SAAS,GAAG;MAAEP,IAAI;MAAEE,IAAI;MAAEE;IAAQ,CAAC;IAEzCV,KAAK,CAACc,IAAI,CAAC,kCAAkCV,KAAK,QAAQ,EAAES,SAAS,CAAC,CACnEE,IAAI,CAACC,QAAQ,IAAI;MAChBC,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdF,KAAK,CAAC,sBAAsB,CAAC;IAC/B,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEjB,IAAK;MACZkB,QAAQ,EAAGC,CAAC,IAAKlB,OAAO,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF5B,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,MAAM;MAClBC,KAAK,EAAEf,IAAK;MACZgB,QAAQ,EAAGC,CAAC,IAAKhB,OAAO,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACF5B,OAAA;MACEmB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,SAAS;MACrBC,KAAK,EAAEb,OAAQ;MACfc,QAAQ,EAAGC,CAAC,IAAKd,UAAU,CAACc,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACF5B,OAAA;MAAQ6B,OAAO,EAAEnB,WAAY;MAAAQ,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV;AAACzB,EAAA,CAxCQF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AA0CjB,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}